# Optimized Blueprint for deploying the Nexus Ai backend on Render
services:
  - type: web
    name: nexus-ai-backend
    env: node
    plan: free  # Upgraded from free for better performance and reliability
    region: oregon  # Optimized region for global performance
    # Specifies the root directory of the backend service
    rootDir: ./server
    # Optimized build commands with caching and error handling
    buildCommand: |
      set -e && \
      echo "üîß Installing dependencies for Nexus AI backend..." && \
      npm ci --production=false && \
      echo "üèóÔ∏è Building TypeScript backend..." && \
      npm run build && \
      echo "‚úÖ Backend build completed successfully"
    # Optimized start command with production settings
    startCommand: 'NODE_ENV=production npm start'
    # Health check configuration for monitoring
    healthCheckPath: /health
    # Auto-deploy configuration
    autoDeploy: true
    # Enhanced environment variables for Render deployment
    envVars:
      # Core Configuration
      - key: NODE_ENV
        value: production
      - key: PORT
        value: "10000"
      # CORS Configuration for API access
      - key: CORS_ORIGIN
        value: "*"
      - key: TELEGRAM_BOT_TOKEN
        sync: false # Set securely in Render dashboard
      - key: PERPLEXITY_API_KEY
        sync: false # AI service API key
      - key: GEMINI_API_KEY
        sync: false # Google Gemini API key
      - key: HUGGINGFACE_API_KEY
        sync: false # HuggingFace API key
      
      # Database Configuration
      - key: MONGO_URI
        sync: false # MongoDB connection string (use MongoDB Atlas)
      
      # Security Configuration
      - key: JWT_SECRET
        sync: false # JWT signing secret
      - key: SESSION_SECRET
        sync: false # Session secret
      - key: BCRYPT_ROUNDS
        value: "12"
      
      # Telegram Bot Configuration
      - key: TELEGRAM_ADMIN_UID
        sync: false # Telegram admin user ID
      - key: TELEGRAM_BOT_URL
        value: "https://t.me/NexusAiProbot"
      
      # Rate Limiting and Performance
      - key: RATE_LIMIT_WINDOW_MS
        value: "900000"  # 15 minutes
      - key: RATE_LIMIT_MAX_REQUESTS
        value: "200"     # Increased for GitHub Pages traffic
      - key: MAX_TOKENS_PER_REQUEST
        value: "2048"
      - key: REQUEST_TIMEOUT_MS
        value: "30000"   # 30 seconds
      
      # Feature Flags
      - key: ENABLE_TELEGRAM_BOT
        value: "true"
      - key: ENABLE_RATE_LIMITING
        value: "true"
      - key: ENABLE_SOCKET_IO
        value: "true"
      - key: ENABLE_FILE_UPLOADS
        value: "true"
      
      # AI Service Configuration
      - key: DEFAULT_AI_MODEL
        value: "gemini"
      
      # File Upload Configuration
      - key: MAX_FILE_SIZE
        value: "10485760"  # 10MB
      - key: ALLOWED_FILE_TYPES
        value: "image/jpeg,image/png,image/gif,text/plain"

# Note: Optimizations for Render deployment:
# 1. Backend-only deployment (frontend systems permanently removed)
# 2. CORS configured for open API access
# 3. Health check endpoint for monitoring
# 4. Environment variables optimized for production
# 5. Build process optimized for TypeScript compilation
# 6. Rate limiting configured for API usage
# 7. All sensitive data configured as secure environment variables
