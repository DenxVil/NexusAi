name: Deploy Nexus AI to Azure App Service

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: nexus-ai-app
  NODE_VERSION: '18'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🔧 Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: 📦 Install root dependencies
      run: npm ci

    - name: 📦 Install server dependencies
      run: cd server && npm ci

    - name: 📦 Install client dependencies
      run: cd client && npm ci

    - name: 🧪 Run server tests
      run: cd server && npm test
      continue-on-error: true

    - name: 🧪 Run client tests
      run: cd client && npm test -- --watchAll=false
      continue-on-error: true

    - name: 🏗️ Build server (TypeScript)
      run: cd server && npm run build

    - name: 🏗️ Build client (React)
      run: cd client && npm run build

    - name: 📝 Generate build timestamp
      run: echo "BUILD_TIMESTAMP=$(date +%s)" >> $GITHUB_ENV

    - name: 📝 Create deployment package
      run: |
        # Create deployment directory
        mkdir -p deployment
        
        # Copy server build
        cp -r server/dist deployment/
        cp server/package*.json deployment/
        
        # Copy client build
        cp -r client/build deployment/client-build
        
        # Copy root files
        cp package*.json deployment/
        cp -r node_modules deployment/ 2>/dev/null || echo "Skipping node_modules"
        
        # Copy Azure configuration
        cp .azure-config deployment/ 2>/dev/null || echo "No Azure config found"
        
        # Set build timestamp in package.json
        cd deployment && npm pkg set buildTimestamp=$BUILD_TIMESTAMP

    - name: 🚀 Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: deployment

    - name: 🧪 Health Check
      run: |
        sleep 30
        curl -f https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health || exit 1
        echo "✅ Deployment successful - Health check passed"

    - name: 📊 Deployment Summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: Production" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Timestamp**: $BUILD_TIMESTAMP" >> $GITHUB_STEP_SUMMARY
        echo "- **Node Version**: $NODE_VERSION" >> $GITHUB_STEP_SUMMARY
        echo "- **App URL**: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net" >> $GITHUB_STEP_SUMMARY
        echo "- **Health Check**: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ✅ Deployed Successfully" >> $GITHUB_STEP_SUMMARY

  # Optional: Deploy to staging slot first
  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🔧 Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: 📦 Install and build
      run: |
        npm ci
        cd server && npm ci && npm run build
        cd ../client && npm ci && npm run build

    - name: 🚀 Deploy to Azure Web App (Staging)
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: staging
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}
        package: .